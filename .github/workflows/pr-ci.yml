# <license header>
#
# CI/CD PR Pipeline for Adobe Commerce AIO Toolkit
name: Pull Request CI

on: [push, pull_request, merge_group]

jobs:
  code-quality:
    name: Code Quality
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: ['20']
        os: [ubuntu-latest]
    timeout-minutes: 15

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Run ESLint
        run: npm run lint

      - name: Check TypeScript compilation
        run: npm run type-check

      - name: Check code formatting
        run: npm run format:check

      - name: Simulate lint-staged (dry run)
        run: |
          echo "üîç Simulating lint-staged behavior..."
          # This ensures our lint-staged config is valid
          npx lint-staged --diff="origin/${{ github.base_ref }}...HEAD" --dry-run || echo "No staged files to check"

      - name: Run security audit
        run: npm run security:audit || echo "Security audit found issues but continuing..."
        continue-on-error: true

  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    needs: code-quality
    timeout-minutes: 10
    strategy:
      matrix:
        node-version: ['20']
        os: [ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Run tests with coverage
        run: npm run test:ci

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
  
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    needs: test
    timeout-minutes: 10
    strategy:
      matrix:
        node-version: ['20']
        os: [ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Build project
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/
